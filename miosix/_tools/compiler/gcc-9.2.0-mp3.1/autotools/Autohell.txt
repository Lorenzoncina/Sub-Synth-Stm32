
One way ticket to (autotools) hell and back.
============================================

A quick guide on how to make autotools work well enough in newlib to make patches.

First of all the main part of the solution: autoreconf

When adding new source files to a directory, use

$ autoreconf --no-recursive
$ find . -name autom4te.cache | xargs rm -rf

The first command does the job. The --no-recursive option is to prevent it
from trying to 'fix' configure files in all subdirectories. The second
command removes all temporary files generated by the first.

When adding a new directory with source files, you've got to add a configure.in
and Makefile.am, by copying them from another directory and tweaking them.
Then, go up one directory, open configure.in and add AC_CONFIG_SUBDIRS(newdir)
where newdir is the new directory. After that, do a

$ autoreconf
$ find . -name autom4te.cache | xargs rm -rf

Is this all? No, obviously. First of all, a small notice: never do an
autoreconf in the top level directory. At most do an autoreconf in the
newlib subdirectory.

Then, the big trouble: autoconf and automake, the two tools behind all this
autoconfiguration magic are neither forward nor backward compatible. If you
try to autoreconf with a different version than the one used in newlib,
they'll try to heavily modify each and every configure they come across,
resulting in a diff from the previous version of several megabytes.

So, you've got to download the exact version of autoconf and automake,
make an autotools directory, copy the autoconf and automake of the exact
version taken from the GNU website, and then

$ wget https://ftpmirror.gnu.org/autoconf/autoconf-2.68.tar.bz2
$ wget https://ftpmirror.gnu.org/automake/automake-1.11.6.tar.gz
$ mkdir autobins && cd autobins
$ PFX=`pwd`
$ cd ..
$ tar xjvf autoconf-2.68.tar.bz2 
$ cd autoconf-2.68
$ ./configure --prefix=$PFX
$ make
$ make install
$ cd ..
$ tar xzvf automake-1.11.6.tar.gz
$ cd automake-1.11.6
$ ./configure --prefix=$PFX
$ make
$ make install
$ cd ../autobins/share
$ ln -s `pwd`/aclocal-1.11 aclocal

Note that the last command is necessary because during installation an
aclocal-1.11 directory is created, but the scripts expect an aclocal directory.
Essentially, the make install of automake is broken, go figure...

After that, before running autoreconf do an export PATH=<dir>:$PATH, where
<dir> is the bin directory where autoconf and automake were installed.

But wait, there's more fail!
The old autotools scripts fail to run with the new perl interpreter...

$ automake --version
Unescaped left brace in regex is illegal here in regex; marked by <-- HERE in m/\${ <-- HERE ([^ \t=:+{}]+)}/ at /home/fede/Documents/programmazione/miosix/newcompiler/compiler/autotools/autobins/bin/automake line 4159.

If it does so, fix it like this:
http://gnu-automake.7480.n7.nabble.com/bug-23602-Unescaped-left-brace-in-regex-is-deprecated-passed-through-in-regex-td22201.html

sub substitute_ac_subst_variables ($)
{
  my ($text) = @_;
# $text =~ s/\${([^ \t=:+{}]+)}/&substitute_ac_subst_variables_worker ($1)/ge;
  $text =~ s/\$\{([^ \t=:+{}]+)\}/substitute_ac_subst_variables_worker ($1)/ge;
  return $text;
}
